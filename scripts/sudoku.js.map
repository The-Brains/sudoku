{"version":3,"sources":["sudoku.jsx"],"names":["SudokuCell","React","Component","constructor","props","onPress","bind","e","cell","currentTarget","x","y","digit","parseInt","fixedValue","isValid","sudoku","setGrid","send","parseFloat","isNaN","Math","floor","shouldComponentUpdate","nextProps","nextState","value","render","className","SudokuGrid","state","grid","fixedGrid","addUpdateCallback","onUpdate","updating","setState","componentDidUpdate","componentDidMount","start","componentWillUnmount","stop","subGrid","xpos","ypos","array","line","x_attr","y_attr","id","push","cells","title","showSudokuGrid","ReactDOM","document","getElementById"],"mappings":"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","file":"sudoku.js","sourcesContent":["class SudokuCell extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onPress = this.onPress.bind(this);\n    }\n\n    onPress(e) {\n        const cell = e.currentTarget;\n        const x = this.props.x;\n        const y = this.props.y;\n\n        let digit = parseInt(this.props.fixedValue);\n        if (this.constructor.isValid(digit)) {\n            digit++;\n            if (digit > 9) {\n                digit = 0;\n            }\n        } else {\n            digit = 1;\n        }\n        this.props.sudoku.setGrid(x,y,digit);\n        this.props.sudoku.send();\n    }\n\n    static isValid(digit) {\n        digit = parseFloat(digit);\n        if (isNaN(digit)) {\n            return false;\n        }\n        if (Math.floor(digit) !== digit) {\n            return false;\n        }\n        return 1 <= digit && digit <= 9;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return this.props.fixedValue !== nextProps.fixedValue\n            || !this.props.fixedValue && this.props.value !== nextProps.value;\n    }\n\n    render() {\n        const className = this.constructor.isValid(this.props.fixedValue) ? 'cell fixed-cell' : 'cell blank-cell';\n        return (\n            <td className={className} onMouseDown={this.onPress}>\n                {this.props.fixedValue||(this.props.value||'')}\n            </td>\n        );\n    }\n}\n\nclass SudokuGrid extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            grid: this.props.sudoku.grid,\n            fixedGrid: this.props.sudoku.grid,\n        };\n        this.props.sudoku.addUpdateCallback(this.onUpdate.bind(this));\n    }\n\n    onUpdate(grid, fixedGrid) {\n        if(this.updating) {\n            return;\n        }\n        this.updating = true;\n        this.setState({grid: grid, fixedGrid: fixedGrid});\n    }\n\n    componentDidUpdate() {\n        this.updating = false;\n    }\n\n    componentDidMount() {\n        this.props.sudoku.start();\n    }\n\n    componentWillUnmount() {\n        this.props.sudoku.stop();\n    }\n\n    subGrid(xpos, ypos) {\n        const array = [];\n        for (let y = 0; y < 3; y++) {\n            const line = [];\n            for (let x = 0; x < 3; x++) {\n                const x_attr = xpos * 3 + x + 1;\n                const y_attr = ypos * 3 + y + 1;\n                const id = `id_${x_attr}_${y_attr}`;\n                const value = this.state.grid[y_attr][x_attr];\n                const fixedValue = this.state.fixedGrid[y_attr][x_attr];\n                line.push(\n                    <SudokuCell key={x+y*3} sudoku={this.props.sudoku} value={value}\n                        x={x_attr} y={y_attr} fixedValue={fixedValue} />\n                );\n            }\n            array.push(<tr key={y}>{line}</tr>);\n        }\n        return array;\n    }\n\n    cells() {\n        const array = [];\n        for (let y = 0; y < 3; y++) {\n            const line = [];\n            for (let x = 0; x < 3; x++) {\n                line.push(<td key={x+y*3}>\n                    <table cellSpacing={0} cellPadding={0}>\n                        <tbody>\n                            {this.subGrid(x,y)}\n                        </tbody>\n                    </table>\n                </td>);\n            }\n            array.push(<tr key={y}>{line}</tr>);\n        }\n        return array;\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.title?<h2>{this.props.title}</h2>:null}\n                <div className='container'>\n                    <table cellSpacing={0} cellPadding={0}>\n                        <tbody>\n                        {this.cells()}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction showSudokuGrid(sudoku) {\n    ReactDOM.render(\n        <SudokuGrid title=\"Sudoku Solver\" sudoku={sudoku} />,\n        document.getElementById('root'),\n    );\n}\n"]}